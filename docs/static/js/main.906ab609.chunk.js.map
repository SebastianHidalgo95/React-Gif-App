{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGifts.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","action","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKcO,OAAO,IAAvC,SACI,uBACIC,KAAK,OACLC,MAAQV,EACRW,SAlBc,SAACR,GACvBF,EAAeE,EAAES,OAAOF,a,QCNnBG,EAAc,SAAC,GAAwB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGtC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCK,EAFnC,+DAIAE,MAAMP,GAJN,cAIbQ,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QAXvB,kBAeXW,GAfW,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAEtB,ECFwB,SAAEA,GAE1B,MAA0BtB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPhB,EAASC,GACJgB,MAAM,SAAAR,GACHM,EAAU,CACNT,KAAKG,EACLI,SAAQ,SAItB,CAAEZ,IAEGa,EDjB0BI,CAAcjB,GAAlCS,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIhB,UAAU,oCAAd,SAAoDI,IAClDY,GAAW,mBAAGhB,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEIa,EAAOF,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADCA,EAAIf,aEenByB,EA3BM,WAGjB,MAAoCxC,mBAAU,CAAC,cAA/C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAGA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ0C,EAAWZ,KAAK,SAAAP,GAAQ,OACxB,cAAC,EAAD,CAEIA,SAAaA,GADNA,Y,MCd/BoB,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.906ab609.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('')\r\n        }     \r\n    }\r\n\r\n    return(\r\n        <form onSubmit={ handleSubmit } action=\"#\">\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//Funcion Conexion API\r\nexport const getGifs = async ( category )=>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=qatp2whm3ek18oFrEcYa3Aa9dGphDgZt`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return  gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">loaging</p> }\r\n            <div className=\"card-grid\">\r\n            { \r\n                images.map ( img => (\r\n                    <GifGridItem \r\n                        key= {img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }               \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifts';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( img => {\r\n                setState ({\r\n                    data:img,\r\n                    loading:false\r\n                })\r\n            })\r\n\r\n    },[ category ])\r\n    \r\n    return state; // {objeto}\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n    \r\n    \r\n    const [categories, setCategories] = useState( ['One Punch'] )\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                    <GifGrid \r\n                        key= { category }\r\n                        category = { category }\r\n                    />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp"],"sourceRoot":""}